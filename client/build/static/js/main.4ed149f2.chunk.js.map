{"version":3,"sources":["components/TimerSelect.js","components/Prompt.js","components/Timer.js","components/Stopwatch.js","components/Pomodoro.js","components/Task.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TimerSelect","props","class","onClick","select","type","Prompt","id","time","document","getElementById","value","setTimer","Timer","useState","startStop","setStartStop","mins","setMins","secs","setSecs","statusChange","useEffect","window","setInterval","clearInterval","Stopwatch","Pomodoro","setRunning","cycles","setCycles","console","log","Task","number","taskNumber","name","task_head","setTask_Head","setDeleted","setStatus","textDecor","setTextDecor","showDelete","mouseStatus","onMouseEnter","onMouseLeave","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","points","TodoList","task_list","set_task_list","newTaskModal","setNewTaskModal","newTask","aria-hidden","role","aria-modal","aria-labelledby","placeholder","concat","alert","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","length","map","task","index","App","text","attribution","response","setResponse","desiredTime","setDesiredTime","timeSelect","childData","setTimerBlock","timerBlock","substr","indexOf","getResponse","axios","get","then","res","data","bind","this","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ed149f2.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport '../index.css';\n\nfunction TimerSelect(props){\n\n    return(\n        <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-white rounded-xl shadow-xl\">\n                <div class = \"h-72 p-10\">\n                    <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-bold italic text-gray-900 tracking-tight mb-8 \">Which Type of Work?</h2>\n                    <div class=\"flex justify-center\">\n                        <button\n                            onClick = {() => {props.select(1)}}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Timer\n                        </button>\n                        <button\n                            onClick = {() => {props.select(2)}}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Stopwatch\n                        </button>\n                        <button\n                            onClick = {() => {props.select(3)}}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Pomodoro\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TimerSelect;","import React, {} from \"react\";\nimport '../index.css';\n\nfunction Prompt(props){\n\n    function submitTime(){\n        const e = document.getElementById(\"mins\");\n        var time = e.value;\n        props.setTimer(time);\n        props.select(1);\n    }\n\n    return(\n        <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-white rounded-xl shadow-xl\">\n                <div class = \"h-72 p-10\">\n                    <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-bold italic text-gray-900 tracking-tight mb-8 \">How Long Would You Like to Work For?</h2>\n                    <div class=\"flex justify-center\">\n                        <select id=\"mins\">\n                            <option>5 Mins</option>\n                            \n                            <option>10 Mins</option>\n                            \n                            <option>15 Mins</option>\n                            \n                            <option>20 Mins</option>\n\n                            <option>30 Mins</option>\n\n                            <option>45 Mins</option>\n\n                            <option>60 Mins</option>\n                            \n                            <option>75 Mins</option>\n\n                            <option>90 Mins</option>\n                            \n                            <option>120 Mins</option>\n                            \n\n                        </select> &nbsp;&nbsp;&nbsp;\n                        <button\n                            onClick={submitTime}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Begin\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Prompt;","import React, { useState, useEffect } from \"react\";\nimport '../index.css';\n\nfunction Timer(props){\n\n    const [startStop, setStartStop] = useState(\"Start\")\n    const [mins, setMins] = useState(props.mins);\n    const [secs, setSecs] = useState(0);\n\n    function go_back(){\n        props.setTimer(0);\n    }\n\n    function statusChange(){\n        if(startStop === \"Start\"){\n            setStartStop(\"Pause\")\n        }\n        else{\n            setStartStop(\"Start\")\n        }\n    }\n\n    function reset(){\n        setMins(props.mins);\n        setSecs(0);\n        if(startStop === \"Pause\")\n            statusChange();\n    }\n\n    if(secs < 0){\n        setSecs(59)\n        setMins(mins - 1)\n    }\n\n    //If we are out of mins then initiate beep and begin the next cycle\n    //Depending on cycle count, set time and begin running\n\n    useEffect(() => {\n        if(startStop === \"Pause\"){\n            const id = window.setInterval(() => {\n                setSecs(secs => secs - 1)\n            }, 1000)\n            return () => {window.clearInterval(id);}\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusChange]);\n\n    return(\n        <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-white rounded-xl shadow-2xl p-4\">\n                <div class = \"h-72\">\n                    <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">Timer</h2>\n                    <h2 class=\"text-center text-5xl sm:text-5xl lg:text-6xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">{mins}:{secs < 10 ? \"0\": null}{secs} </h2>\n                    <div class = \"flex justify-center\">\n                        <button\n                            onClick={statusChange}\n                            type=\"button\"\n                            class=\"border border-gray-700 bg-gray-700 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-800 focus:outline-none focus:shadow-outline\">\n                            {startStop}\n                        </button>\n                        <button\n                            onClick={reset}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Reset\n                        </button>\n                        <button\n                            onClick={go_back}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-100 focus:outline-none focus:shadow-outline\">\n                            Back\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;","import React, { useState, useEffect } from \"react\";\nimport '../index.css';\n\nfunction Stopwatch(props){\n\n    const [startStop, setStartStop] = useState(\"Start\")\n    const [mins, setMins] = useState(0);\n    const [secs, setSecs] = useState(0);\n\n    function go_back(){\n        props.setTimer(0);\n    }\n\n    function statusChange(){\n        if(startStop === \"Start\"){\n            setStartStop(\"Pause\")\n        }\n        else{\n            setStartStop(\"Start\")\n        }\n    }\n\n    function reset(){\n        setMins(props.mins);\n        setSecs(0);\n        if(startStop === \"Pause\")\n            statusChange();\n    }\n\n    if(secs > 59){\n        setSecs(0)\n        setMins(mins + 1)\n    }\n\n    //If we are out of mins then initiate beep and begin the next cycle\n    //Depending on cycle count, set time and begin running\n\n    useEffect(() => {\n        if(startStop === \"Pause\"){\n            const id = window.setInterval(() => {\n                setSecs(secs => secs + 1)\n            }, 1000)\n            return () => {window.clearInterval(id);}\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusChange]);\n\n    return(\n        <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-white rounded-xl shadow-2xl p-4\">\n                <div class = \"h-72\">\n                    <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">Stopwatch</h2>\n                    <h2 class=\"text-center text-5xl sm:text-5xl lg:text-6xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">{mins}:{secs < 10 ? \"0\": null}{secs} </h2>\n                    <div class = \"flex justify-center\">\n                        <button\n                            onClick={statusChange}\n                            type=\"button\"\n                            class=\"border border-gray-700 bg-gray-700 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-800 focus:outline-none focus:shadow-outline\">\n                            {startStop}\n                        </button>\n                        <button\n                            onClick={reset}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Reset\n                        </button>\n                        <button\n                            onClick={go_back}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-100 focus:outline-none focus:shadow-outline\">\n                            Back\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Stopwatch;","import React, { useState, useEffect } from \"react\";\nimport '../index.css';\n\nfunction Pomodoro(props){\n\n    const [startStop, setStartStop] = useState(\"Start\")\n    const [isRunning, setRunning] = useState(false)\n    const [cycles, setCycles] = useState(1);\n    const [mins, setMins] = useState(2);\n    const [secs, setSecs] = useState(0);\n\n    function go_back(){\n        props.setTimer(0);\n    }\n\n    function statusChange(){\n        if(startStop === \"Start\"){\n            setStartStop(\"Pause\")\n        }\n        else{\n            setStartStop(\"Start\")\n        }\n    }\n\n    function reset(){\n        setMins(props.mins);\n        setSecs(0);\n        if(startStop === \"Pause\")\n            statusChange();\n    }\n\n    if(secs < 0){\n        setSecs(59)\n        setMins(mins - 1)\n    }\n\n    if(mins < 0){\n        console.log(cycles);\n        setCycles(cycles + 1)\n        if (cycles % 2 === 0 && cycles % 4 !== 0){\n        console.log(cycles);\n            setMins(1)\n            setSecs(0)\n            setRunning(true)\n            // updateColor()\n        }\n        else if (cycles % 4 === 0 && cycles !== 0){\n            setMins(3)\n            setSecs(0)\n            setRunning(true)\n            // updateColor()\n        }\n        else{\n            setMins(2)\n            setRunning(true)\n            // updateColor()\n        }\n        \n    }\n\n    //If we are out of mins then initiate beep and begin the next cycle\n    //Depending on cycle count, set time and begin running\n\n    useEffect(() => {\n        if(startStop === \"Pause\"){\n            const id = window.setInterval(() => {\n                setSecs(secs => secs - 1)\n            }, 1000)\n            return () => {window.clearInterval(id);}\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusChange]);\n\n    return(\n        <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-white rounded-xl shadow-2xl p-4\">\n                <div class = \"h-72\">\n                    <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">Timer</h2>\n                    <h2 class=\"text-center text-5xl sm:text-5xl lg:text-6xl leading-normal font-extrabold text-gray-900 tracking-tight mb-8 \">{mins}:{secs < 10 ? \"0\": null}{secs} </h2>\n                    <div class = \"flex justify-center\">\n                        <button\n                            onClick={statusChange}\n                            type=\"button\"\n                            class=\"border border-gray-700 bg-gray-700 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-800 focus:outline-none focus:shadow-outline\">\n                            {startStop}\n                        </button>\n                        <button\n                            onClick={reset}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-300 focus:outline-none focus:shadow-outline\">\n                            Reset\n                        </button>\n                        <button\n                            onClick={go_back}\n                            type=\"button\"\n                            class=\"border border-gray-200 bg-gray-200 text-gray-700 rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-100 focus:outline-none focus:shadow-outline\">\n                            Back\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Pomodoro;","import React, { useState } from \"react\";\nimport \"../index.css\";\n\nfunction Task(props) {\n\n  const [taskNumber, setTaskNumber] = useState(props.number);\n  const [name, setName] = useState(props.name);\n  const [task_head, setTask_Head] = useState(props.number);\n  const [deleted, setDeleted] = useState(false);\n\n    /**status:\n        0 - Created, Non-Completed\n        1 - Completed\n\n        if there are no needs for other statuses then could be a boolean\n\n    **/\n  const [status, setStatus] = useState(0);\n\n  const [textDecor, setTextDecor] = useState(\"text-xl font-bold\")\n\n  function taskCompleted(){\n    setStatus(1);\n    setTextDecor(\"text-xl font-bold text-gray-400 line-through \")\n  }\n\n  function showDelete(mouseStatus){\n    if(mouseStatus){\n        setTask_Head(\"X\")\n    }else{\n        setTask_Head(taskNumber);\n    }\n  }\n\n  function deleteTask(){\n    setDeleted(true);\n  }\n\n  return (\n      <li>\n        <div class = \"flex\">\n          <button class = \"flex-initial bg-white hover:bg-red-400 rounded-full h-12 w-12 flex items-center justify-center self-center\" onMouseEnter={()=>showDelete(true)} onMouseLeave={()=>showDelete(false)} onClick={() => deleteTask()}><div class = {textDecor}>{task_head}.</div></button>\n            &nbsp;\n            <div class=\"flex-1 bg-white rounded-xl shadow-xl p-4 \">\n                <div class = {textDecor}>{name}</div>\n                </div>\n                <div class = \"justify-self-end flex items-center justify-center self-center \">\n\n                        &nbsp;&nbsp;\n                        <button onClick={() => taskCompleted()} class=\"bg-green-300 hover:bg-green-500 text-gray-800 font-bold py-4 px-4 rounded-full inline-flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\n                        </button>\n                    </div>\n            </div>\n      </li>\n\n\n  );\n}\n\nexport default Task;\n","import React, { useState } from 'react';\nimport '../index.css';\nimport Task from './Task'\n\nfunction TodoList(props){\n\n    //List to hold tasks\n    const [task_list, set_task_list] = useState([]);\n    const [newTaskModal, setNewTaskModal] = useState(<></>)\n    let temp_array = []\n\n    function addNewTask(name){\n        if(name === \"\"){\n            alert(\"Enter a Task Name\")\n            return\n        }\n        console.log(name)\n        \n        set_task_list(task_list.concat(name));\n\n        console.log(task_list);\n        \n        setNewTaskModal(<></>);\n    }\n\n    function newTask(){\n        setNewTaskModal(<div class=\"fixed z-10 inset-0 overflow-y-auto\">\n        <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n            <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n            </div>\n            <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n\n            <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n            <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div class=\"sm:flex sm:items-start\">\n                <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10\">\n                    <svg class=\"h-6 w-6 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                    </svg>\n                </div>\n                <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\n                    Create New Task\n                    </h3>\n                    <div class=\"mt-2\">\n                    <p class=\"text-sm text-gray-500\">  \n                    </p>\n                    <input id = \"task_name\"class=\"appearance-none border border-transparent w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-md rounded-lg text-base focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent\" placeholder=\"Task Name\"></input>\n                    </div>\n                </div>\n                </div>\n            </div>\n            <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button onClick={()=>addNewTask(document.getElementById('task_name').value)} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-400 text-base font-medium text-white hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-800 sm:ml-3 sm:w-auto sm:text-sm\">\n                Create\n                </button>\n                <button onClick={()=>setNewTaskModal(<></>)} type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                Cancel\n                </button>\n            </div>\n            </div>\n        </div>\n        </div>)\n\n    }\n\n    //Task Syntax\n    // [name: \"default_name\"]\n    //Map Func\n\n\n\n    return (\n        <>\n        {newTaskModal}\n        <div class = \"justify-self-stretch col-span-4\">\n            <div class = \"bg-blue-200 rounded-xl shadow-2xl p-4\">\n            <button onClick={()=>newTask()} class = \"float-right\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg></button>     \n                <div class = \"h-full p-6\">\n                    <div class  = \"bg-gray-400 rounded-xl shadow-2xl\">\n                        <div class = \"h-full p-4\">\n                            <ul class = \"space-y-2\">\n                                {task_list.length === 0 ? <div class = \"text-white text-xl font-bold\">Press the + Button to Manage Tasks</div> : task_list.map((task, index) => (\n                                    index = index + 1,\n                                    <Task name = {task} number = {index}/>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './index.css';\nimport axios from 'axios'\nimport TimerSelect from './components/TimerSelect'\nimport Prompt from './components/Prompt'\nimport Timer from './components/Timer'\nimport Stopwatch from './components/Stopwatch'\nimport Pomodoro from './components/Pomodoro'\nimport TodoList from './components/TodoList'\n\n\nfunction App(){\n\n  const [response, setResponse] = useState({ text: 'Loading...', attribution: '' });\n  const [desiredTime, setDesiredTime] = useState(0);\n  const [timerBlock, setTimerBlock] = useState(<TimerSelect select={timeSelect}/>)\n\n  function timeSelect(childData){\n    if(childData === 1){\n      if(desiredTime === 0){\n        setTimerBlock(<Prompt setTimer = {setTimer} select={timeSelect}/>);\n      } else{\n      setTimerBlock(<Timer setTimer = {setTimer} mins = {desiredTime}/>);\n      }\n    }\n    if(childData === 2){\n      setTimerBlock(<Stopwatch />)\n    }\n    if(childData === 3){\n      setTimerBlock(<Pomodoro />)\n    }\n    else{\n      console.log(childData)\n    }\n  }\n\n  function setTimer(childData){\n    if(childData === 0)\n      setDesiredTime(childData);\n    else{\n    childData = childData.substr(0,childData.indexOf(' '));\n    setDesiredTime(childData);\n    console.log(childData);\n    }\n  }\n\n  function getResponse(){\n    axios.get('/api/quote').then((res) => {\n      setResponse(res.data);\n    });\n}\n\n  useEffect(() => {\n    getResponse();\n  }, [])\n\n\n\n  return(\n    <div class = \"h-screen bg-yellow-200\">\n      <div class = \"flex-auto max-w-9xl mx-auto p-10\">\n        <h2 class=\"text-center text-3xl sm:text-5xl lg:text-6xl leading-none font-extrabold text-gray-900 tracking-tight mb-8\">Deep Work Center</h2>\n          <div class = \"grid justify-items-stretch gap-8 grid-cols-4\">\n            <div class = \"md:col-span-2 col-span-4\">\n            <div class = \"bg-red-300 rounded-xl shadow-2xl p-4\">\n                <div class = \"h-72 p-10\">\n                  <h2 class=\"text-center text-3xl sm:text-3xl lg:text-4xl leading-normal font-bold italic text-gray-900 tracking-tight mb-8 \">{response.text}</h2>\n                  <h2 class=\"text-right text-xl sm:text-xl lg:text-xl leading-normal italic text-gray-500 tracking-tight mb-8 \">-{response.attribution}</h2>  \n                </div>\n                <button \n                    onClick = {getResponse.bind(this)}\n                    class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded align-top items-center\">\n                    <svg class=\"fill-current w-4 h-4 mr-0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.2\"/></svg>\n                  </button> \n\n            </div>\n            </div>\n\n              {timerBlock}\n\n              {/* {desiredTime === 0 && timeSelection !== 0 ? <Prompt setTimer = {setTimer} /> : <Timer setTimer = {setTimer} mins = {desiredTime}/>}             \n              */}\n             \n             <TodoList />\n\n              {/* <img class = \"rounded-xl shadow-xl\" alt=\"Inspo\" src = \"https://content.presspage.com/uploads/63/1920_aristotlequote.jpg?10000\" style = {{maxWidth: '100%'}}></img> */}\n          \n          </div>\n          </div>\n\n    </div>\n    \n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}